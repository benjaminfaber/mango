# -*- mode: makefile -*-

ifdef NERSC_HOST
        HOSTNAME = $(NERSC_HOST)
else
        HOSTNAME?="laptop"
endif

ifeq ($(HOSTNAME),edison)
	FC = ftn
	FLINKER = $(FC)
	## NERSC documentation recommends against specifying -O3
	## -mkl MUST APPEAR AT THE END!!
	EXTRA_COMPILE_FLAGS = -openmp -mkl
	EXTRA_LINK_FLAGS =  -openmp -mkl -Wl,-ydgemm_
	# Above, the link flag "-Wl,-ydgemm_" causes the linker to report which version of DGEMM (the BLAS3 matrix-matrix-multiplication subroutine) is used.
	# For batch systems, set the following variable to the command used to run jobs. This variable is used by 'make test'.
	REGCOIL_COMMAND_TO_SUBMIT_JOB = srun -n 1 -c 24

else ifeq ($(HOSTNAME),cori)
	FC = ftn
	FLINKER = $(FC)
	## NERSC documentation recommends against specifying -O3
	## -mkl MUST APPEAR AT THE END!!
	EXTRA_COMPILE_FLAGS = -qopenmp -mkl
	EXTRA_LINK_FLAGS =  -qopenmp -mkl -Wl,-ydgemm_
	# Above, the link flag "-Wl,-ydgemm_" causes the linker to report which version of DGEMM (the BLAS3 matrix-matrix-multiplication subroutine) is used.
	# For batch systems, set the following variable to the command used to run jobs. This variable is used by 'make test'.
	REGCOIL_COMMAND_TO_SUBMIT_JOB = srun -n 1 -c 32

else ifneq (,$(findstring pppl,$(HOSTNAME)))
        MANGO_PETSC_AVAILABLE = F
        MANGO_HOPSPACK_AVAILABLE = F
        MANGO_DAKOTA_AVAILABLE = F
        MANGO_NLOPT_AVAILABLE = T

	CC = mpicc
	FC = mpif90
	CLINKER = $(CC)
	FLINKER = $(FC)

        EXTRA_C_COMPILE_FLAGS = -O0 -g -I/u/mlandrem/nlopt/nlopt-2.6.1/install/include
        EXTRA_F_COMPILE_FLAGS = -O0 -g -ffree-line-length-none
        EXTRA_C_LINK_FLAGS = -L/u/mlandrem/nlopt/nlopt-2.6.1/install/lib64 -lstdc++ -lnlopt
        EXTRA_F_LINK_FLAGS = -L/u/mlandrem/nlopt/nlopt-2.6.1/install/lib64 -lstdc++ -lnlopt

else ifeq ($(CLUSTER),DRACO)
	# On Draco, you seem to need 'module load gcc'.
	MANGO_PETSC_AVAILABLE = F
	MANGO_HOPSPACK_AVAILABLE = F
	MANGO_DAKOTA_AVAILABLE = F
	MANGO_NLOPT_AVAILABLE = F

	CC = mpiicpc
        FC = mpiifort
	#CLINKER = $(CC)
	#FLINKER = $(FC)
	EXTRA_C_COMPILE_FLAGS = -O0 -g
	EXTRA_F_COMPILE_FLAGS = -O0 -g -module obj
	EXTRA_C_LINK_FLAGS = 
	EXTRA_F_LINK_FLAGS = -cxxlib

	#PETSC_DIR=/opt/local/lib/petsc
	#include ${PETSC_DIR}/lib/petsc/conf/variables
	#include ${PETSC_DIR}/lib/petsc/conf/rules
	#
	#EXTRA_C_COMPILE_FLAGS = -I${PETSC_DIR}/include -O0 -g
	#EXTRA_F_COMPILE_FLAGS = -I${PETSC_DIR}/include -ffree-line-length-none -O0 -g
	#EXTRA_COMPILE_FLAGS = -ffree-line-length-none -O0 -g
	#EXTRA_LINK_FLAGS = -lnlopt
	#EXTRA_C_COMPILE_FLAGS += -I/usr/local/include
	#EXTRA_F_COMPILE_FLAGS += -I/usr/local/include
else
	MANGO_PETSC_AVAILABLE = T
	MANGO_HOPSPACK_AVAILABLE = F
	MANGO_DAKOTA_AVAILABLE = F
	MANGO_NLOPT_AVAILABLE = T

	PETSC_DIR=/opt/local/lib/petsc
	include ${PETSC_DIR}/lib/petsc/conf/variables
	include ${PETSC_DIR}/lib/petsc/conf/rules

	#CC = mpicxx
	#FC = mpif90
	#CLINKER = $(CC)
	#FLINKER = $(CC)
	EXTRA_C_COMPILE_FLAGS = -I${PETSC_DIR}/include -O0 -g
	EXTRA_F_COMPILE_FLAGS = -I${PETSC_DIR}/include -ffree-line-length-none -O0 -g
	#EXTRA_COMPILE_FLAGS = -ffree-line-length-none -O0 -g
	EXTRA_C_COMPILE_FLAGS += -I/usr/local/include
	EXTRA_F_COMPILE_FLAGS += -I/usr/local/include
	EXTRA_C_LINK_FLAGS = $(EXTRA_LINK_FLAGS) -lnlopt -lstdc++
	EXTRA_F_LINK_FLAGS = $(EXTRA_LINK_FLAGS) -lnlopt -lstdc++


	# For batch systems, set the following variable to the command used to run jobs. This variable is used by 'make test'.
	REGCOIL_COMMAND_TO_SUBMIT_JOB =
endif

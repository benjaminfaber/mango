#!/usr/bin/env python3

max_N_procs = 5

import subprocess
import sys
import os

#####################################################################
# Get MANGO_COMMAND_TO_SUBMIT_JOB
#####################################################################

try:
    submitCommand = os.environ["MANGO_COMMAND_TO_SUBMIT_JOB"]
except:
    submitCommand = ""

# If MANGO_COMMAND_TO_SUBMIT_JOB is not set, try getting it by running make in the parent directory:
if submitCommand == "":
    print('Running make to try to get MANGO_COMMAND_TO_SUBMIT_JOB')
    make_results = subprocess.run(['make','--directory=..','print_command_to_submit_job'],capture_output=True)
    # The 'decode' in the next line is needed to convert the byte sequence returned by subprocess into a regular python string.
    submitCommand = make_results.stdout.decode('utf-8').strip()

print("MANGO_COMMAND_TO_SUBMIT_JOB=",submitCommand)

#####################################################################
# Loop over N_procs, calling unit_tests each time
#####################################################################

all_succeeded = True
for N_procs in range(1, max_N_procs+1):
    command = submitCommand + " ./unit_tests"
    command = command.replace('NUM_PROCS',str(N_procs))
    print("Submitting command "+command)
    sys.stdout.flush()
    exit_code = subprocess.call(command.split())
    print("exit code: ",exit_code)
    if exit_code != 0:
        all_succeeded = False

if all_succeeded:
    print("Unit tests pass for all values of N_procs.")
else:
    print("!!! Unit tests did not all pass !!!")
    exit(1)
